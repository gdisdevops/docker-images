FROM jenkins/inbound-agent:3148.v532a_7e715ee3-7

USER root

ARG VAULT_VERSION=1.14.3
ARG PACKER_VERSION=1.9.4
ARG TERRAFORM_1_VERSION=1.5.7
ARG KUBECTL_VERSION=1.26.8
ARG HELM_VERSION=3.12.3
ARG ANSIBLE_VERSION=8.4.0
ARG CONFTEST_VERSION=0.45.0
ARG INFRACOST_VERSION=v0.10.29
ARG COSIGN_VERSION=1.13.1
ARG SENTRY_CLI_VERSION=2.20.7
ARG CHECKOV_VERSION=2.4.36
ARG VAULT_CRD_RENDERER_VERSION=1.0.7
ARG PIP_HVAC_VERSION=1.2.1

RUN set -eux; \
    apt-get update; \
    apt-get dist-upgrade -y; \
    apt-get install -y \
        git \
        apt-transport-https \
        curl \
        init \
        openssh-server openssh-client \
        software-properties-common \
        unzip \
        libffi-dev \
        jq \
        xxd \
        python3-pip && \
    python3 -m pip install --upgrade pip --break-system-packages && \
    rm -rf /var/lib/apt/lists/* 

RUN set -eux; \
    ARCH="$(dpkg --print-architecture)"; \
    case "${ARCH}" in \
       aarch64|arm64) \
          AWS_CLI_DOWNLOAD_URL="https://awscli.amazonaws.com/awscli-exe-linux-aarch64.zip"; \
          VAULT_DOWNLOAD_URL="https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_arm64.zip"; \
          PACKER_DOWNLOAD_URL="https://releases.hashicorp.com/packer/${PACKER_VERSION}/packer_${PACKER_VERSION}_linux_arm64.zip"; \
          KUBECTL_DOWNLOAD_URL="https://storage.googleapis.com/kubernetes-release/release/v${KUBECTL_VERSION}/bin/linux/arm64/kubectl"; \
          HELM_DOWNLOAD_URL="https://get.helm.sh/helm-v${HELM_VERSION}-linux-arm64.tar.gz"; \
          HELM_FOLDER="linux-arm64"; \
          CONFTEST_DOWNLOAD_URL="https://github.com/open-policy-agent/conftest/releases/download/v${CONFTEST_VERSION}/conftest_${CONFTEST_VERSION}_Linux_arm64.tar.gz"; \
          INFRACOST_DOWNLOAD_FILE="infracost-linux-arm64"; \
          INFRACOST_DOWNLOAD_URL="https://github.com/infracost/infracost/releases/download/${INFRACOST_VERSION}"; \
          COSIGN_DOWNLOAD_URL="https://github.com/sigstore/cosign/releases/download/v${COSIGN_VERSION}/cosign_${COSIGN_VERSION}_arm64.deb"; \
          SENTRY_DOWNLOAD_URL="https://release-registry.services.sentry.io/apps/sentry-cli/${SENTRY_CLI_VERSION}?response=download&arch=aarch64&platform=Linux&package=sentry-cli"; \
          SENTRY_HASHSUM="deab6568a7c5ba5af03674e23b3afc26f439b8d7b1f32c04f955c5af1a7552f7"; \
          VAULT_CRD_RENDERER_URL="https://github.com/DaspawnW/vault-crd-helm-renderer/releases/download/v${VAULT_CRD_RENDERER_VERSION}"; \
         ;; \
       amd64|x86_64) \
          AWS_CLI_DOWNLOAD_URL="https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip"; \
          VAULT_DOWNLOAD_URL="https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_amd64.zip"; \
          PACKER_DOWNLOAD_URL="https://releases.hashicorp.com/packer/${PACKER_VERSION}/packer_${PACKER_VERSION}_linux_amd64.zip"; \
          KUBECTL_DOWNLOAD_URL="https://storage.googleapis.com/kubernetes-release/release/v${KUBECTL_VERSION}/bin/linux/amd64/kubectl"; \
          HELM_DOWNLOAD_URL="https://get.helm.sh/helm-v${HELM_VERSION}-linux-amd64.tar.gz"; \
          HELM_FOLDER="linux-amd64"; \
          CONFTEST_DOWNLOAD_URL="https://github.com/open-policy-agent/conftest/releases/download/v${CONFTEST_VERSION}/conftest_${CONFTEST_VERSION}_Linux_x86_64.tar.gz"; \
          INFRACOST_DOWNLOAD_FILE="infracost-linux-amd64"; \
          INFRACOST_DOWNLOAD_URL="https://github.com/infracost/infracost/releases/download/${INFRACOST_VERSION}"; \
          COSIGN_DOWNLOAD_URL="https://github.com/sigstore/cosign/releases/download/v${COSIGN_VERSION}/cosign_${COSIGN_VERSION}_amd64.deb"; \
          SENTRY_DOWNLOAD_URL="https://release-registry.services.sentry.io/apps/sentry-cli/${SENTRY_CLI_VERSION}?response=download&arch=x86_64&platform=Linux&package=sentry-cli"; \
          SENTRY_HASHSUM="5cd1c556bb33854e2c30f2c02beb8fefcc9da03212285ede9b4550820285beb1"; \
          VAULT_CRD_RENDERER_URL="https://github.com/DaspawnW/vault-crd-helm-renderer/releases/download/v${VAULT_CRD_RENDERER_VERSION}"; \
         ;; \
       *) \
         echo "Unsupported arch: ${ARCH}"; \
         exit 1; \
         ;; \
    esac; \

    #### install aws cli
    curl "${AWS_CLI_DOWNLOAD_URL}" -o "awscliv2.zip"; \
      unzip awscliv2.zip && ./aws/install && rm awscliv2.zip && rm -rf aws; \

    #### install boto3, checov and pre-commit
    pip3 install --no-cache-dir -U boto3 checkov==${CHECKOV_VERSION} pre-commit --break-system-packages; \

    #### install ansible
    pip3 install --no-cache-dir ansible==${ANSIBLE_VERSION} --break-system-packages; \
    pip3 install --no-cache-dir hvac==${PIP_HVAC_VERSION} --break-system-packages; \
    
    #### install vault
    curl -L "${VAULT_DOWNLOAD_URL}" -o "vault.zip"; \
      unzip vault.zip && mv vault /usr/bin && rm vault.zip; \

    #### install packer
    curl -L "${PACKER_DOWNLOAD_URL}" -o "packer.zip"; \
      unzip packer.zip && mv packer /usr/bin && rm packer.zip; \

    #### install kubectl
    curl -L "${KUBECTL_DOWNLOAD_URL}" -o "kubectl"; \
      chmod +x kubectl && mv kubectl /usr/bin; \

    #### install helm
    curl -L "${HELM_DOWNLOAD_URL}" -o "helm.tar.gz"; \
      tar -xvzf helm.tar.gz && chmod +x "${HELM_FOLDER}/helm" && mv "${HELM_FOLDER}/helm" /usr/bin; \
      rm -rf "${HELM_FOLDER}" helm.tar.gz; \

    #### install conftest (aka opa)
    curl -L "${CONFTEST_DOWNLOAD_URL}" -o "conftest_${CONFTEST_VERSION}.tar.gz"; \
      tar xzf "conftest_${CONFTEST_VERSION}.tar.gz"; \
      mv conftest /usr/local/bin; \
      chmod +x /usr/local/bin/conftest; \
      rm "conftest_${CONFTEST_VERSION}.tar.gz"; \

    #### install infracost
    curl -L "${INFRACOST_DOWNLOAD_URL}/${INFRACOST_DOWNLOAD_FILE}.tar.gz" -o "${INFRACOST_DOWNLOAD_FILE}.tar.gz"; \
      curl -L "${INFRACOST_DOWNLOAD_URL}/${INFRACOST_DOWNLOAD_FILE}.tar.gz.sha256" -o "${INFRACOST_DOWNLOAD_FILE}.tar.gz.sha256"; \
      sha256sum -c "${INFRACOST_DOWNLOAD_FILE}.tar.gz.sha256"; \
      mkdir /opt/infracost_bin; \
      tar xf "${INFRACOST_DOWNLOAD_FILE}.tar.gz" -C /opt/infracost_bin/; \
      rm "${INFRACOST_DOWNLOAD_FILE}.tar.gz" "${INFRACOST_DOWNLOAD_FILE}.tar.gz.sha256"; \
      chmod +x "/opt/infracost_bin/infracost-linux-$(dpkg --print-architecture)"; \
      mv "/opt/infracost_bin/infracost-linux-$(dpkg --print-architecture)" /opt/infracost_bin/infracost; \
      ln -s /opt/infracost_bin/infracost /usr/local/bin/infracost; \

    #### install sentry-cli
    curl -L "${SENTRY_DOWNLOAD_URL}" -o sentry-cli; \
      echo "${SENTRY_HASHSUM}  sentry-cli" | sha256sum -c; \
      mv sentry-cli /usr/local/bin/sentry-cli; \
      chmod +x /usr/local/bin/sentry-cli; \

    #### install cosign
    curl -L "${COSIGN_DOWNLOAD_URL}" -o cosign.deb; \
      dpkg -i cosign.deb; \
      rm cosign.deb; \

    #### install vault crd post renderer
    curl -L "${VAULT_CRD_RENDERER_URL}/vault-crd-helm-renderer.jar" -o vault-crd-helm-renderer.jar; \
      curl -L "${VAULT_CRD_RENDERER_URL}/vault-crd-helm-renderer.jar.sha1" -o vault-crd-helm-renderer.jar.sha1; \
      sha1sum vault-crd-helm-renderer.jar; \
      mkdir -p /opt/daspawnw; \
      mv vault-crd-helm-renderer.jar /opt/daspawnw/vault-crd-helm-renderer.jar; \

    #### install tfenv
    mkdir -p /etc/tfenv; \
     git clone --depth 1 https://github.com/tfutils/tfenv.git /etc/tfenv; \
     chown -R jenkins /etc/tfenv; 

COPY --chown=jenkins:jenkins jenkins-inbound-agent/bin/post-renderer.sh /usr/bin/post-renderer.sh

USER jenkins
    #### install terraform with tfenv and helm diff

RUN helm plugin install https://github.com/databus23/helm-diff

ENV PATH "$PATH:/etc/tfenv/bin"
RUN tfenv install ${TERRAFORM_1_VERSION} \
      && tfenv use ${TERRAFORM_1_VERSION}
